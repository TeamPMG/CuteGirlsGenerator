{
  "converted_at": 1520288700,
  "inputs": [
    "Variable3466",
    "Variable3467"
  ],
  "outputs": [
    "Variable3524"
  ],
  "memory_layout": {
    "static": {
      "size": -1,
      "allocations": {
        "Variable3480": {
          "name": "Variable3480",
          "offset": -1,
          "size": 65536,
          "width": 4096,
          "height": 16,
          "channel_mode": "R"
        },
        "Variable3650": {
          "name": "Variable3650",
          "offset": -1,
          "size": 4096,
          "width": 4096,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2630": {
          "name": "ConstantVariable2630",
          "offset": -1,
          "size": 36864,
          "width": 16,
          "height": 576,
          "channel_mode": "RGBA"
        },
        "Variable3603": {
          "name": "Variable3603",
          "offset": -1,
          "size": 65536,
          "width": 64,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2537": {
          "name": "ConstantVariable2537",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3477": {
          "name": "Variable3477",
          "offset": -1,
          "size": 100,
          "width": 25,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "Variable3467": {
          "name": "Variable3467",
          "offset": -1,
          "size": 1539,
          "width": 1539,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3582": {
          "name": "Variable3582",
          "offset": -1,
          "size": 524288,
          "width": 4096,
          "height": 128,
          "channel_mode": "R"
        },
        "Variable3652": {
          "name": "Variable3652",
          "offset": -1,
          "size": 4096,
          "width": 4096,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2541": {
          "name": "ConstantVariable2541",
          "offset": -1,
          "size": 10000,
          "width": 25,
          "height": 100,
          "channel_mode": "RGBA"
        },
        "Variable3466": {
          "name": "Variable3466",
          "offset": -1,
          "size": 100,
          "width": 25,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "Variable3474": {
          "name": "Variable3474",
          "offset": -1,
          "size": 200,
          "width": 50,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "Variable3583": {
          "name": "Variable3583",
          "offset": -1,
          "size": 131072,
          "width": 4096,
          "height": 32,
          "channel_mode": "R"
        },
        "Variable3572": {
          "name": "Variable3572",
          "offset": -1,
          "size": 131072,
          "width": 4096,
          "height": 32,
          "channel_mode": "R"
        },
        "ConstantVariable2656": {
          "name": "ConstantVariable2656",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3647": {
          "name": "Variable3647",
          "offset": -1,
          "size": 4096,
          "width": 4096,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2614": {
          "name": "ConstantVariable2614",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3490": {
          "name": "Variable3490",
          "offset": -1,
          "size": 131072,
          "width": 4096,
          "height": 32,
          "channel_mode": "R"
        },
        "Variable3649": {
          "name": "Variable3649",
          "offset": -1,
          "size": 4096,
          "width": 4096,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2519": {
          "name": "ConstantVariable2519",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2661": {
          "name": "ConstantVariable2661",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3619": {
          "name": "Variable3619",
          "offset": -1,
          "size": 8192,
          "width": 4096,
          "height": 2,
          "channel_mode": "R"
        },
        "ConstantVariable2608": {
          "name": "ConstantVariable2608",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3524": {
          "name": "Variable3524",
          "offset": -1,
          "size": 12288,
          "width": 4096,
          "height": 3,
          "channel_mode": "R"
        },
        "ConstantVariable2513": {
          "name": "ConstantVariable2513",
          "offset": -1,
          "size": 153900,
          "width": 1539,
          "height": 100,
          "channel_mode": "R"
        },
        "ConstantVariable2652": {
          "name": "ConstantVariable2652",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3605": {
          "name": "Variable3605",
          "offset": -1,
          "size": 131072,
          "width": 32,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2631": {
          "name": "ConstantVariable2631",
          "offset": -1,
          "size": 131072,
          "width": 32,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable3620": {
          "name": "Variable3620",
          "offset": -1,
          "size": 8192,
          "width": 4096,
          "height": 2,
          "channel_mode": "R"
        },
        "ConstantVariable2612": {
          "name": "ConstantVariable2612",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3587": {
          "name": "Variable3587",
          "offset": -1,
          "size": 1179648,
          "width": 4096,
          "height": 288,
          "channel_mode": "R"
        },
        "Variable3470": {
          "name": "Variable3470",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3616": {
          "name": "Variable3616",
          "offset": -1,
          "size": 16384,
          "width": 4096,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable2539": {
          "name": "ConstantVariable2539",
          "offset": -1,
          "size": 20000,
          "width": 50,
          "height": 100,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2610": {
          "name": "ConstantVariable2610",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2646": {
          "name": "ConstantVariable2646",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2596": {
          "name": "ConstantVariable2596",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3655": {
          "name": "Variable3655",
          "offset": -1,
          "size": 200,
          "width": 200,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3592": {
          "name": "Variable3592",
          "offset": -1,
          "size": 1048576,
          "width": 4096,
          "height": 256,
          "channel_mode": "R"
        },
        "Variable3614": {
          "name": "Variable3614",
          "offset": -1,
          "size": 16384,
          "width": 4096,
          "height": 4,
          "channel_mode": "R"
        },
        "Variable3593": {
          "name": "Variable3593",
          "offset": -1,
          "size": 262144,
          "width": 4096,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable2632": {
          "name": "ConstantVariable2632",
          "offset": -1,
          "size": 147456,
          "width": 32,
          "height": 1152,
          "channel_mode": "RGBA"
        },
        "Variable3568": {
          "name": "Variable3568",
          "offset": -1,
          "size": 262144,
          "width": 4096,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable2616": {
          "name": "ConstantVariable2616",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2657": {
          "name": "ConstantVariable2657",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2629": {
          "name": "ConstantVariable2629",
          "offset": -1,
          "size": 192,
          "width": 16,
          "height": 3,
          "channel_mode": "RGBA"
        },
        "Variable3510": {
          "name": "Variable3510",
          "offset": -1,
          "size": 262144,
          "width": 4096,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable2649": {
          "name": "ConstantVariable2649",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3638": {
          "name": "Variable3638",
          "offset": -1,
          "size": 4096,
          "width": 4096,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2648": {
          "name": "ConstantVariable2648",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3609": {
          "name": "Variable3609",
          "offset": -1,
          "size": 262144,
          "width": 16,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2510": {
          "name": "ConstantVariable2510",
          "offset": -1,
          "size": 65536,
          "width": 4096,
          "height": 16,
          "channel_mode": "R"
        },
        "Variable3625": {
          "name": "Variable3625",
          "offset": -1,
          "size": 8192,
          "width": 4096,
          "height": 2,
          "channel_mode": "R"
        },
        "ConstantVariable2658": {
          "name": "ConstantVariable2658",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3597": {
          "name": "Variable3597",
          "offset": -1,
          "size": 2359296,
          "width": 4096,
          "height": 576,
          "channel_mode": "R"
        },
        "ConstantVariable2654": {
          "name": "ConstantVariable2654",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3613": {
          "name": "Variable3613",
          "offset": -1,
          "size": 16384,
          "width": 4096,
          "height": 4,
          "channel_mode": "R"
        },
        "Variable3471": {
          "name": "Variable3471",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2521": {
          "name": "ConstantVariable2521",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3473": {
          "name": "Variable3473",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3600": {
          "name": "Variable3600",
          "offset": -1,
          "size": 32768,
          "width": 4096,
          "height": 8,
          "channel_mode": "R"
        },
        "ConstantVariable2647": {
          "name": "ConstantVariable2647",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2514": {
          "name": "ConstantVariable2514",
          "offset": -1,
          "size": 3,
          "width": 3,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2604": {
          "name": "ConstantVariable2604",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2655": {
          "name": "ConstantVariable2655",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2650": {
          "name": "ConstantVariable2650",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2600": {
          "name": "ConstantVariable2600",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable2653": {
          "name": "ConstantVariable2653",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2633": {
          "name": "ConstantVariable2633",
          "offset": -1,
          "size": 524288,
          "width": 64,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "Variable3472": {
          "name": "Variable3472",
          "offset": -1,
          "size": 100,
          "width": 100,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable3578": {
          "name": "Variable3578",
          "offset": -1,
          "size": 12288,
          "width": 4096,
          "height": 3,
          "channel_mode": "R"
        },
        "Variable3523": {
          "name": "Variable3523",
          "offset": -1,
          "size": 12288,
          "width": 4096,
          "height": 3,
          "channel_mode": "R"
        },
        "ConstantVariable2659": {
          "name": "ConstantVariable2659",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3601": {
          "name": "Variable3601",
          "offset": -1,
          "size": 32768,
          "width": 4096,
          "height": 8,
          "channel_mode": "R"
        },
        "ConstantVariable2660": {
          "name": "ConstantVariable2660",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2651": {
          "name": "ConstantVariable2651",
          "offset": -1,
          "size": 409600,
          "width": 25,
          "height": 4096,
          "channel_mode": "RGBA"
        },
        "Variable3478": {
          "name": "Variable3478",
          "offset": -1,
          "size": 65536,
          "width": 4096,
          "height": 16,
          "channel_mode": "R"
        },
        "Variable3479": {
          "name": "Variable3479",
          "offset": -1,
          "size": 65536,
          "width": 4096,
          "height": 16,
          "channel_mode": "R"
        }
      }
    },
    "dynamic": {
      "size": -1,
      "allocations": {}
    },
    "mapping": {
      "Variable3466": "Variable3466",
      "Variable3467": "Variable3467",
      "Variable3471": "Variable3471",
      "Variable3472": "Variable3472",
      "Variable3473": "Variable3473",
      "Variable3468": "Variable3471",
      "Variable3469": "Variable3472",
      "Variable3470": "Variable3470",
      "Variable3655": "Variable3655",
      "Variable3474": "Variable3474",
      "Variable3475": "Variable3471",
      "Variable3476": "Variable3472",
      "Variable3657": "Variable3473",
      "Variable3477": "Variable3477",
      "Variable3650": "Variable3650",
      "Variable3649": "Variable3649",
      "Variable3619": "Variable3619",
      "Variable3647": "Variable3647",
      "Variable3646": "Variable3650",
      "Variable3620": "Variable3620",
      "Variable3644": "Variable3649",
      "Variable3643": "Variable3650",
      "Variable3622": "Variable3619",
      "Variable3641": "Variable3647",
      "Variable3640": "Variable3650",
      "Variable3623": "Variable3620",
      "Variable3614": "Variable3614",
      "Variable3635": "Variable3649",
      "Variable3634": "Variable3650",
      "Variable3626": "Variable3619",
      "Variable3638": "Variable3638",
      "Variable3637": "Variable3650",
      "Variable3625": "Variable3625",
      "Variable3613": "Variable3613",
      "Variable3632": "Variable3649",
      "Variable3631": "Variable3650",
      "Variable3653": "Variable3647",
      "Variable3652": "Variable3652",
      "Variable3629": "Variable3620",
      "Variable3628": "Variable3619",
      "Variable3617": "Variable3614",
      "Variable3616": "Variable3616",
      "Variable3601": "Variable3601",
      "Variable3600": "Variable3600",
      "Variable3478": "Variable3478",
      "Variable3479": "Variable3479",
      "Variable3480": "Variable3480",
      "Variable3659": "Variable3478",
      "Variable3603": "Variable3603",
      "Variable3582": "Variable3582",
      "Variable3583": "Variable3583",
      "Variable3572": "Variable3572",
      "Variable3490": "Variable3490",
      "Variable3661": "Variable3583",
      "Variable3605": "Variable3605",
      "Variable3587": "Variable3587",
      "Variable3588": "Variable3572",
      "Variable3570": "Variable3583",
      "Variable3500": "Variable3490",
      "Variable3663": "Variable3572",
      "Variable3607": "Variable3605",
      "Variable3592": "Variable3592",
      "Variable3593": "Variable3593",
      "Variable3568": "Variable3568",
      "Variable3510": "Variable3510",
      "Variable3665": "Variable3593",
      "Variable3609": "Variable3609",
      "Variable3597": "Variable3597",
      "Variable3598": "Variable3568",
      "Variable3566": "Variable3593",
      "Variable3520": "Variable3510",
      "Variable3667": "Variable3568",
      "Variable3611": "Variable3609",
      "Variable3578": "Variable3578",
      "Variable3523": "Variable3523",
      "Variable3524": "Variable3524",
      "ConstantVariable2541": "ConstantVariable2541",
      "ConstantVariable2537": "ConstantVariable2537",
      "ConstantVariable2513": "ConstantVariable2513",
      "ConstantVariable2519": "ConstantVariable2519",
      "ConstantVariable2539": "ConstantVariable2539",
      "ConstantVariable2521": "ConstantVariable2521",
      "ConstantVariable2660": "ConstantVariable2660",
      "ConstantVariable2659": "ConstantVariable2659",
      "ConstantVariable2658": "ConstantVariable2658",
      "ConstantVariable2657": "ConstantVariable2657",
      "ConstantVariable2656": "ConstantVariable2656",
      "ConstantVariable2655": "ConstantVariable2655",
      "ConstantVariable2654": "ConstantVariable2654",
      "ConstantVariable2653": "ConstantVariable2653",
      "ConstantVariable2652": "ConstantVariable2652",
      "ConstantVariable2649": "ConstantVariable2649",
      "ConstantVariable2648": "ConstantVariable2648",
      "ConstantVariable2651": "ConstantVariable2651",
      "ConstantVariable2650": "ConstantVariable2650",
      "ConstantVariable2647": "ConstantVariable2647",
      "ConstantVariable2646": "ConstantVariable2646",
      "ConstantVariable2661": "ConstantVariable2661",
      "ConstantVariable2510": "ConstantVariable2510",
      "ConstantVariable2633": "ConstantVariable2633",
      "ConstantVariable2608": "ConstantVariable2608",
      "ConstantVariable2616": "ConstantVariable2616",
      "ConstantVariable2632": "ConstantVariable2632",
      "ConstantVariable2604": "ConstantVariable2604",
      "ConstantVariable2614": "ConstantVariable2614",
      "ConstantVariable2631": "ConstantVariable2631",
      "ConstantVariable2600": "ConstantVariable2600",
      "ConstantVariable2612": "ConstantVariable2612",
      "ConstantVariable2630": "ConstantVariable2630",
      "ConstantVariable2596": "ConstantVariable2596",
      "ConstantVariable2610": "ConstantVariable2610",
      "ConstantVariable2629": "ConstantVariable2629",
      "ConstantVariable2514": "ConstantVariable2514"
    }
  },
  "weight_encoding": "raw",
  "placeholders": [],
  "shader_sources": {
    "Tensordot_RGBA_36f5958746db76bfa2544a6b187211ee44cd4ef9977901e58e3c7ebe": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(100,1);\nconst ivec2 v1 = ivec2(100,1);\nconst ivec2 v2 = ivec2(1,100);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.04,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.04,0.01);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 25; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_ddc92d1cff9080f3cea8c35a6cfd7e4d99dbc11df35f72974355ef98": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(100,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(100,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,100);\nconst ivec2 v6 = ivec2(100,1);\nconst vec2 v7 = vec2(0.01,1.0);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,100);\nconst ivec2 v11 = ivec2(100,1);\nconst vec2 v12 = vec2(0.01,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "LeakyRelu_2095f067486f6b6a9d1b1a24b6b75c84afa0964a91a0107c4c86ba17": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(100.0,1.0);\nconst float slope = 0.2;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = ((1.0 + slope) * x0 + (1.0 - slope) * abs(x0)) * 0.5;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Tensordot_R_d24d09b1cf60200a82375edf5381850d09677293753a7275c8861cf0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(100,1);\nconst ivec2 v1 = ivec2(100,1);\nconst ivec2 v2 = ivec2(1,100);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.000649772579597141,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.000649772579597141,0.01);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 1539; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_3ec90022875b7b7ecc5be77237cd9cd353803ac9b8e074caf941aab8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(200,1);\nconst ivec2 v1 = ivec2(200,1);\nconst ivec2 v2 = ivec2(1,200);\nconst ivec2 v3 = ivec2(200,1);\nconst ivec2 v4 = ivec2(200,1);\nconst ivec2 v5 = ivec2(1,200);\nuniform sampler2D v6;\nconst ivec2 v7 = ivec2(100,1);\nconst ivec2 v8 = ivec2(1,100);\nconst ivec2 v9 = ivec2(100,1);\nconst vec2 v10 = vec2(0.01,1.0);\nuniform sampler2D v11;\nconst ivec2 v12 = ivec2(100,1);\nconst ivec2 v13 = ivec2(1,100);\nconst ivec2 v14 = ivec2(100,1);\nconst vec2 v15 = vec2(0.01,1.0);\n\nvoid main() {\nivec2 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec2 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 100;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 100)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "ConvertRtoRGBA_7325fe38bf7150e216e948a72a01741a288c4624c6ef3c38ec346f68": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(200,4,1);\nconst ivec3 v2 = ivec3(200,1,1);\nconst ivec3 v3 = ivec3(1,200,1);\nconst vec3 v4 = vec3(1.0,0.005,1.0);\nconst ivec3 v5 = ivec3(200,4,1);\nconst ivec3 v6 = ivec3(200,1,1);\nconst ivec3 v7 = ivec3(1,200,1);\nconst vec3 v8 = vec3(1.0,0.005,1.0);\nconst ivec3 v9 = ivec3(200,4,1);\nconst ivec3 v10 = ivec3(200,1,1);\nconst ivec3 v11 = ivec3(1,200,1);\nconst vec3 v12 = vec3(1.0,0.005,1.0);\nconst ivec3 v13 = ivec3(200,4,1);\nconst ivec3 v14 = ivec3(200,1,1);\nconst ivec3 v15 = ivec3(1,200,1);\nconst vec3 v16 = vec3(1.0,0.005,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_841046a89a4937056da62509b8afbb6f151aa65e44a11a91c08432c4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(100,1);\nconst ivec2 v1 = ivec2(100,1);\nconst ivec2 v2 = ivec2(1,100);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.02,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.02,0.01);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 50; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_044f401a443ee9ef38d5c9d852596f45eb43cd6616dad2188ab96997": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(100,4,1);\nconst ivec3 v2 = ivec3(100,1,1);\nconst ivec3 v3 = ivec3(1,100,1);\nconst vec3 v4 = vec3(1.0,0.01,1.0);\nconst ivec3 v5 = ivec3(100,4,1);\nconst ivec3 v6 = ivec3(100,1,1);\nconst ivec3 v7 = ivec3(1,100,1);\nconst vec3 v8 = vec3(1.0,0.01,1.0);\nconst ivec3 v9 = ivec3(100,4,1);\nconst ivec3 v10 = ivec3(100,1,1);\nconst ivec3 v11 = ivec3(1,100,1);\nconst vec3 v12 = vec3(1.0,0.01,1.0);\nconst ivec3 v13 = ivec3(100,4,1);\nconst ivec3 v14 = ivec3(100,1,1);\nconst ivec3 v15 = ivec3(1,100,1);\nconst vec3 v16 = vec3(1.0,0.01,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(4096,1);\nconst ivec2 v2 = ivec2(1,4096);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.04,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.04,0.000244140625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 25; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(8192,1);\nconst ivec2 v2 = ivec2(1,8192);\nconst ivec2 v3 = ivec2(4096,1);\nconst ivec2 v4 = ivec2(8192,1);\nconst ivec2 v5 = ivec2(1,8192);\nuniform sampler2D v6;\nconst ivec2 v7 = ivec2(4096,1);\nconst ivec2 v8 = ivec2(1,4096);\nconst ivec2 v9 = ivec2(4096,1);\nconst vec2 v10 = vec2(0.000244140625,1.0);\nuniform sampler2D v11;\nconst ivec2 v12 = ivec2(4096,1);\nconst ivec2 v13 = ivec2(1,4096);\nconst ivec2 v14 = ivec2(4096,1);\nconst vec2 v15 = vec2(0.000244140625,1.0);\n\nvoid main() {\nivec2 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec2 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 4096;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 4096)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "Concat_0a545fa9586acf3195c08717c62d49f2d8889ae19d5250b4295719d1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(16384,1);\nconst ivec2 v2 = ivec2(1,16384);\nconst ivec2 v3 = ivec2(4096,1);\nconst ivec2 v4 = ivec2(16384,1);\nconst ivec2 v5 = ivec2(1,16384);\nuniform sampler2D v6;\nconst ivec2 v7 = ivec2(8192,1);\nconst ivec2 v8 = ivec2(1,4096);\nconst ivec2 v9 = ivec2(4096,2);\nconst vec2 v10 = vec2(0.000244140625,0.5);\nuniform sampler2D v11;\nconst ivec2 v12 = ivec2(8192,1);\nconst ivec2 v13 = ivec2(1,4096);\nconst ivec2 v14 = ivec2(4096,2);\nconst vec2 v15 = vec2(0.000244140625,0.5);\n\nvoid main() {\nivec2 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec2 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 8192;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 8192)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "Concat_77041cc0dac739a9f4657ce8f3c1949e70f0a56fc8c3b57ef0ffcc09": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(32768,1);\nconst ivec2 v2 = ivec2(1,32768);\nconst ivec2 v3 = ivec2(4096,1);\nconst ivec2 v4 = ivec2(32768,1);\nconst ivec2 v5 = ivec2(1,32768);\nuniform sampler2D v6;\nconst ivec2 v7 = ivec2(16384,1);\nconst ivec2 v8 = ivec2(1,4096);\nconst ivec2 v9 = ivec2(4096,4);\nconst vec2 v10 = vec2(0.000244140625,0.25);\nuniform sampler2D v11;\nconst ivec2 v12 = ivec2(16384,1);\nconst ivec2 v13 = ivec2(1,4096);\nconst ivec2 v14 = ivec2(4096,4);\nconst vec2 v15 = vec2(0.000244140625,0.25);\n\nvoid main() {\nivec2 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec2 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 16384;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 16384)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "Concat_c31b13edbc3961d35ccb58b52c389666efd7ce505a1d0a45f4b58d9f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(65536,1);\nconst ivec2 v2 = ivec2(1,65536);\nconst ivec2 v3 = ivec2(4096,1);\nconst ivec2 v4 = ivec2(65536,1);\nconst ivec2 v5 = ivec2(1,65536);\nuniform sampler2D v6;\nconst ivec2 v7 = ivec2(32768,1);\nconst ivec2 v8 = ivec2(1,4096);\nconst ivec2 v9 = ivec2(4096,8);\nconst vec2 v10 = vec2(0.000244140625,0.125);\nuniform sampler2D v11;\nconst ivec2 v12 = ivec2(32768,1);\nconst ivec2 v13 = ivec2(1,4096);\nconst ivec2 v14 = ivec2(4096,8);\nconst vec2 v15 = vec2(0.000244140625,0.125);\n\nvoid main() {\nivec2 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec2 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 32768;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 32768)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "ElementwiseAdd_cae0aff46c73878584c5843ccbf4628dbbda5891648349494aed9c56": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(65536,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,16);\nconst vec2 v7 = vec2(0.000244140625,0.0625);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,4096);\nconst ivec2 v11 = ivec2(4096,16);\nconst vec2 v12 = vec2(0.000244140625,0.0625);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "LeakyRelu_4b03ff957f73328030d6750a65a6445a24ab167cc320d29be2cfd0ed": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(4096.0,16.0);\nconst float slope = 0.2;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = ((1.0 + slope) * x0 + (1.0 - slope) * abs(x0)) * 0.5;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Reshape_23bf124531f71907b45d6764d275fbd9727d7b1ccd58a2cacdbeb719": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(4096,1);\nconst ivec2 v2 = ivec2(256,1);\nconst ivec2 v3 = ivec2(256,256);\nconst ivec2 v4 = ivec2(256,1);\nconst ivec4 v5 = ivec4(2048,128,16,1);\nconst ivec4 v6 = ivec4(32,16,8,16);\nconst ivec4 v7 = ivec4(2048,128,16,1);\nconst ivec2 v8 = ivec2(1,4096);\nconst ivec2 v9 = ivec2(4096,16);\nconst vec2 v10 = vec2(0.000244140625,0.0625);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0)).yx),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "ConvertRtoRGBA_0e0d19568fa376a0b1503e4e11242d067adcb375b9de5f205fc04861": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(256,4,1);\nconst ivec3 v2 = ivec3(4096,1,1);\nconst ivec3 v3 = ivec3(16,4096,1);\nconst vec3 v4 = vec3(0.0625,0.000244140625,1.0);\nconst ivec3 v5 = ivec3(256,4,1);\nconst ivec3 v6 = ivec3(4096,1,1);\nconst ivec3 v7 = ivec3(16,4096,1);\nconst vec3 v8 = vec3(0.0625,0.000244140625,1.0);\nconst ivec3 v9 = ivec3(256,4,1);\nconst ivec3 v10 = ivec3(4096,1,1);\nconst ivec3 v11 = ivec3(16,4096,1);\nconst vec3 v12 = vec3(0.0625,0.000244140625,1.0);\nconst ivec3 v13 = ivec3(256,4,1);\nconst ivec3 v14 = ivec3(4096,1,1);\nconst ivec3 v15 = ivec3(16,4096,1);\nconst vec3 v16 = vec3(0.0625,0.000244140625,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_96422eaef392dafbe3b8fb4c51daf759ea2ebfebaebff782e557ab2f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec2 v2 = ivec2(256,2048);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.00390625);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.00048828125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_71ba17735b1e4b5c71a687778f022160124d313939a8cc7b3b5ec4c8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(131072,4096,128,1);\nconst ivec4 v2 = ivec4(1,32,32,128);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(524288,32768,2048,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,128);\nconst vec2 v7 = vec2(0.000244140625,0.0078125);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z;\n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 4; kh++) {\n        int h2 = (h1 + 1 - kh) / 2;\n        if (mod(h1 + 1 - kh, 2) != 0 || h2 < 0 || h2 >= 16) continue;\n\n        for (int kw = 0; kw < 4; kw++) {\n            int w2 = (w1 + 1 - kw) / 2;\n            if (mod(w1 + 1 - kw, 2) != 0 || w2 < 0 || w2 >= 16) continue;\n\n            int khkwc1 = (kh * 4 + kw) * 128 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_fast((vec4(n, h2, w2, khkwc1)),v4, v5, v6, 0))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "ElementwiseMul_4ad202bee9cfab61daba287c480b2600cf7dd1a67fac29ef07023a88": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(128,1024,1,1);\nconst ivec4 v3 = ivec4(128,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,128);\nconst ivec2 v7 = ivec2(128,1);\nconst vec2 v8 = vec2(0.0078125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,128,1,1);\nconst ivec2 v11 = ivec2(1,4096);\nconst ivec2 v12 = ivec2(4096,32);\nconst vec2 v13 = vec2(0.000244140625,0.03125);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_d9fcefe0acb7c770acc7baeff8a7143e79d7f855aa5b35b4feb08ef5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(128,1024,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1024,1,1,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,32);\nconst vec2 v7 = vec2(0.000244140625,0.03125);\nconst ivec4 v8 = ivec4(128,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,128);\nconst ivec2 v12 = ivec2(128,1);\nconst vec2 v13 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "LeakyRelu_5e4f95ba0bdb741e50ef6a60ce660804b450771b0e856c9d1e730119": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(1024,128,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1024,1,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,32);\nconst vec2 v7 = vec2(0.000244140625,0.03125);\nconst float slope = 0.2;\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\ny = ((1.0 + slope) * x0 + (1.0 - slope) * abs(x0)) * 0.5;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_7044593d09900feb4142c3ccadd6cbc563644dca54e1cea1c1aca808": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(128,4,1);\nconst ivec3 v2 = ivec3(4096,1,1);\nconst ivec3 v3 = ivec3(32,4096,1);\nconst vec3 v4 = vec3(0.03125,0.000244140625,1.0);\nconst ivec3 v5 = ivec3(128,4,1);\nconst ivec3 v6 = ivec3(4096,1,1);\nconst ivec3 v7 = ivec3(32,4096,1);\nconst vec3 v8 = vec3(0.03125,0.000244140625,1.0);\nconst ivec3 v9 = ivec3(128,4,1);\nconst ivec3 v10 = ivec3(4096,1,1);\nconst ivec3 v11 = ivec3(32,4096,1);\nconst vec3 v12 = vec3(0.03125,0.000244140625,1.0);\nconst ivec3 v13 = ivec3(128,4,1);\nconst ivec3 v14 = ivec3(4096,1,1);\nconst ivec3 v15 = ivec3(32,4096,1);\nconst vec3 v16 = vec3(0.03125,0.000244140625,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_061e3011498db07313c8ec861bf47472905d07f4e022f2f56e9c137c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(1152,1);\nconst ivec2 v2 = ivec2(1024,1152);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.0009765625);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.0008680555555555555);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_4a493b9c5ed50e9ad73e3bae25eae8c6ef2e24e3a9ed71e9046090d4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(131072,4096,128,1);\nconst ivec4 v2 = ivec4(1,32,32,128);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1179648,36864,1152,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,288);\nconst vec2 v7 = vec2(0.000244140625,0.003472222222222222);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z;\n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 3; kh++) {\n        int h2 = (h1 + 1 - kh) / 1;\n        if (mod(h1 + 1 - kh, 1) != 0 || h2 < 0 || h2 >= 32) continue;\n\n        for (int kw = 0; kw < 3; kw++) {\n            int w2 = (w1 + 1 - kw) / 1;\n            if (mod(w1 + 1 - kw, 1) != 0 || w2 < 0 || w2 >= 32) continue;\n\n            int khkwc1 = (kh * 3 + kw) * 128 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6, 0))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "Tensordot_RGBA_7d845fc685a95cab6061ad83010c0af05b73cd24fc45882353266969": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(1024,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.0009765625);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_562c7ba82c213a55c7d639679ab16a00b6edeb965b7296ba11f1c14c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(262144,4096,64,1);\nconst ivec4 v2 = ivec4(1,64,64,64);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1048576,32768,1024,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,256);\nconst vec2 v7 = vec2(0.000244140625,0.00390625);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z;\n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 4; kh++) {\n        int h2 = (h1 + 1 - kh) / 2;\n        if (mod(h1 + 1 - kh, 2) != 0 || h2 < 0 || h2 >= 32) continue;\n\n        for (int kw = 0; kw < 4; kw++) {\n            int w2 = (w1 + 1 - kw) / 2;\n            if (mod(w1 + 1 - kw, 2) != 0 || w2 < 0 || w2 >= 32) continue;\n\n            int khkwc1 = (kh * 4 + kw) * 64 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6, 0))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "ElementwiseMul_312e8c96f4a6aa5aca7c5a96e13f567c77cda5f845fe08dae8b8613d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(4096,1,1,1);\nconst ivec4 v2 = ivec4(64,4096,1,1);\nconst ivec4 v3 = ivec4(64,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,64);\nconst ivec2 v7 = ivec2(64,1);\nconst vec2 v8 = vec2(0.015625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,64,1,1);\nconst ivec2 v11 = ivec2(1,4096);\nconst ivec2 v12 = ivec2(4096,64);\nconst vec2 v13 = vec2(0.000244140625,0.015625);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_ed15b6b75e4a388912b6da00ce6d7b52012f3486fa9672bb438be9b5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(4096,1,1,1);\nconst ivec4 v2 = ivec4(64,4096,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(4096,1,1,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,64);\nconst vec2 v7 = vec2(0.000244140625,0.015625);\nconst ivec4 v8 = ivec4(64,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "LeakyRelu_74210680de819f7ba52438af4ad46335f469d755a7b85605b646d2a7": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(4096,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,4096,1,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,64);\nconst vec2 v7 = vec2(0.000244140625,0.015625);\nconst float slope = 0.2;\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\ny = ((1.0 + slope) * x0 + (1.0 - slope) * abs(x0)) * 0.5;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_7a6ce9d4ad2cea961e608735220ac421c3b99b448fdd69f0bca7d34b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(64,4,1);\nconst ivec3 v2 = ivec3(4096,1,1);\nconst ivec3 v3 = ivec3(64,4096,1);\nconst vec3 v4 = vec3(0.015625,0.000244140625,1.0);\nconst ivec3 v5 = ivec3(64,4,1);\nconst ivec3 v6 = ivec3(4096,1,1);\nconst ivec3 v7 = ivec3(64,4096,1);\nconst vec3 v8 = vec3(0.015625,0.000244140625,1.0);\nconst ivec3 v9 = ivec3(64,4,1);\nconst ivec3 v10 = ivec3(4096,1,1);\nconst ivec3 v11 = ivec3(64,4096,1);\nconst vec3 v12 = vec3(0.015625,0.000244140625,1.0);\nconst ivec3 v13 = ivec3(64,4,1);\nconst ivec3 v14 = ivec3(4096,1,1);\nconst ivec3 v15 = ivec3(64,4096,1);\nconst vec3 v16 = vec3(0.015625,0.000244140625,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_8c2613f99cbd135d22e339933f068c9d267bbbc3206a2f4a24d7d3d9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(576,1);\nconst ivec2 v2 = ivec2(4096,576);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.000244140625);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.001736111111111111);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_dd94e970f941d0c3d69dd1dab7db9296ca9c2512eaa0f6e50c5b45fd": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(262144,4096,64,1);\nconst ivec4 v2 = ivec4(1,64,64,64);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(2359296,36864,576,1);\nconst ivec2 v5 = ivec2(1,4096);\nconst ivec2 v6 = ivec2(4096,576);\nconst vec2 v7 = vec2(0.000244140625,0.001736111111111111);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z;\n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 3; kh++) {\n        int h2 = (h1 + 1 - kh) / 1;\n        if (mod(h1 + 1 - kh, 1) != 0 || h2 < 0 || h2 >= 64) continue;\n\n        for (int kw = 0; kw < 3; kw++) {\n            int w2 = (w1 + 1 - kw) / 1;\n            if (mod(w1 + 1 - kw, 1) != 0 || w2 < 0 || w2 >= 64) continue;\n\n            int khkwc1 = (kh * 3 + kw) * 64 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6, 0))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "Tensordot_RGBA_520433d80b6bb99133d20bf77361bf8c42654ba5ccd574bda65941a6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec2 v1 = ivec2(3,1);\nconst ivec2 v2 = ivec2(4096,3);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.000244140625);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.3333333333333333);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_653436feffb44c22215d2e03614842e3cefeb6ee9e7f3ce63ec7e772": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4096,1);\nconst ivec4 v1 = ivec4(4096,1,1,1);\nconst ivec4 v2 = ivec4(3,4096,1,1);\nconst ivec4 v3 = ivec4(3,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,3);\nconst ivec2 v7 = ivec2(3,1);\nconst vec2 v8 = vec2(0.3333333333333333,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,3,1,1);\nconst ivec2 v11 = ivec2(1,4096);\nconst ivec2 v12 = ivec2(4096,3);\nconst vec2 v13 = vec2(0.000244140625,0.3333333333333333);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Tanh_2f842fb76de8adaedbb5d962ca4b85437bbc997aadcf9da4beb45a27": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(4096.0,3.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\n\nfloat v = exp(-2.0*abs(x0));\ny = (1.0 - v) / (1.0 + v) * sign(x0);\n\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n"
  },
  "exec_infos": [
    {
      "shader_name": "Tensordot_RGBA_36f5958746db76bfa2544a6b187211ee44cd4ef9977901e58e3c7ebe",
      "inputs": [
        {
          "variable_name": "Variable3466",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2541",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3471"
    },
    {
      "shader_name": "ElementwiseAdd_ddc92d1cff9080f3cea8c35a6cfd7e4d99dbc11df35f72974355ef98",
      "inputs": [
        {
          "variable_name": "Variable3471",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2537",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3472"
    },
    {
      "shader_name": "LeakyRelu_2095f067486f6b6a9d1b1a24b6b75c84afa0964a91a0107c4c86ba17",
      "inputs": [
        {
          "variable_name": "Variable3472",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3473"
    },
    {
      "shader_name": "Tensordot_R_d24d09b1cf60200a82375edf5381850d09677293753a7275c8861cf0",
      "inputs": [
        {
          "variable_name": "Variable3467",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2513",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3468"
    },
    {
      "shader_name": "ElementwiseAdd_ddc92d1cff9080f3cea8c35a6cfd7e4d99dbc11df35f72974355ef98",
      "inputs": [
        {
          "variable_name": "Variable3468",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2519",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3469"
    },
    {
      "shader_name": "LeakyRelu_2095f067486f6b6a9d1b1a24b6b75c84afa0964a91a0107c4c86ba17",
      "inputs": [
        {
          "variable_name": "Variable3469",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3470"
    },
    {
      "shader_name": "Concat_3ec90022875b7b7ecc5be77237cd9cd353803ac9b8e074caf941aab8",
      "inputs": [
        {
          "variable_name": "Variable3470",
          "value": 0
        },
        {
          "variable_name": "Variable3473",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3655"
    },
    {
      "shader_name": "ConvertRtoRGBA_7325fe38bf7150e216e948a72a01741a288c4624c6ef3c38ec346f68",
      "inputs": [
        {
          "variable_name": "Variable3655",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3474"
    },
    {
      "shader_name": "Tensordot_RGBA_841046a89a4937056da62509b8afbb6f151aa65e44a11a91c08432c4",
      "inputs": [
        {
          "variable_name": "Variable3474",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2539",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3475"
    },
    {
      "shader_name": "ElementwiseAdd_ddc92d1cff9080f3cea8c35a6cfd7e4d99dbc11df35f72974355ef98",
      "inputs": [
        {
          "variable_name": "Variable3475",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2521",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3476"
    },
    {
      "shader_name": "LeakyRelu_2095f067486f6b6a9d1b1a24b6b75c84afa0964a91a0107c4c86ba17",
      "inputs": [
        {
          "variable_name": "Variable3476",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3657"
    },
    {
      "shader_name": "ConvertRtoRGBA_044f401a443ee9ef38d5c9d852596f45eb43cd6616dad2188ab96997",
      "inputs": [
        {
          "variable_name": "Variable3657",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3477"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2660",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3652"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2659",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3650"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2658",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3649"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3650",
          "value": 0
        },
        {
          "variable_name": "Variable3649",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3619"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2657",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3647"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2656",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3646"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3647",
          "value": 0
        },
        {
          "variable_name": "Variable3646",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3620"
    },
    {
      "shader_name": "Concat_0a545fa9586acf3195c08717c62d49f2d8889ae19d5250b4295719d1",
      "inputs": [
        {
          "variable_name": "Variable3620",
          "value": 0
        },
        {
          "variable_name": "Variable3619",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3616"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2655",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3644"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2654",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3643"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3644",
          "value": 0
        },
        {
          "variable_name": "Variable3643",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3622"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2653",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3641"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2652",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3640"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3641",
          "value": 0
        },
        {
          "variable_name": "Variable3640",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3623"
    },
    {
      "shader_name": "Concat_0a545fa9586acf3195c08717c62d49f2d8889ae19d5250b4295719d1",
      "inputs": [
        {
          "variable_name": "Variable3623",
          "value": 0
        },
        {
          "variable_name": "Variable3622",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3614"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2649",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3635"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2648",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3634"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3635",
          "value": 0
        },
        {
          "variable_name": "Variable3634",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3626"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2651",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3638"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2650",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3637"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3638",
          "value": 0
        },
        {
          "variable_name": "Variable3637",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3625"
    },
    {
      "shader_name": "Concat_0a545fa9586acf3195c08717c62d49f2d8889ae19d5250b4295719d1",
      "inputs": [
        {
          "variable_name": "Variable3626",
          "value": 0
        },
        {
          "variable_name": "Variable3625",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3613"
    },
    {
      "shader_name": "Concat_77041cc0dac739a9f4657ce8f3c1949e70f0a56fc8c3b57ef0ffcc09",
      "inputs": [
        {
          "variable_name": "Variable3614",
          "value": 0
        },
        {
          "variable_name": "Variable3613",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3600"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2647",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3632"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2646",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3631"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3632",
          "value": 0
        },
        {
          "variable_name": "Variable3631",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3628"
    },
    {
      "shader_name": "Tensordot_RGBA_59b94dcaabdb5838d17460deba2a50b332dcffa552adc901b5dd5546",
      "inputs": [
        {
          "variable_name": "Variable3477",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2661",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3653"
    },
    {
      "shader_name": "Concat_b444529c7309e7423cdfe52fbf84451cd0202a4ebee2f6a9493c6214",
      "inputs": [
        {
          "variable_name": "Variable3653",
          "value": 0
        },
        {
          "variable_name": "Variable3652",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3629"
    },
    {
      "shader_name": "Concat_0a545fa9586acf3195c08717c62d49f2d8889ae19d5250b4295719d1",
      "inputs": [
        {
          "variable_name": "Variable3629",
          "value": 0
        },
        {
          "variable_name": "Variable3628",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3617"
    },
    {
      "shader_name": "Concat_77041cc0dac739a9f4657ce8f3c1949e70f0a56fc8c3b57ef0ffcc09",
      "inputs": [
        {
          "variable_name": "Variable3617",
          "value": 0
        },
        {
          "variable_name": "Variable3616",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3601"
    },
    {
      "shader_name": "Concat_c31b13edbc3961d35ccb58b52c389666efd7ce505a1d0a45f4b58d9f",
      "inputs": [
        {
          "variable_name": "Variable3601",
          "value": 0
        },
        {
          "variable_name": "Variable3600",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3478"
    },
    {
      "shader_name": "ElementwiseAdd_cae0aff46c73878584c5843ccbf4628dbbda5891648349494aed9c56",
      "inputs": [
        {
          "variable_name": "Variable3478",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2510",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3479"
    },
    {
      "shader_name": "LeakyRelu_4b03ff957f73328030d6750a65a6445a24ab167cc320d29be2cfd0ed",
      "inputs": [
        {
          "variable_name": "Variable3479",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3480"
    },
    {
      "shader_name": "Reshape_23bf124531f71907b45d6764d275fbd9727d7b1ccd58a2cacdbeb719",
      "inputs": [
        {
          "variable_name": "Variable3480",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3659"
    },
    {
      "shader_name": "ConvertRtoRGBA_0e0d19568fa376a0b1503e4e11242d067adcb375b9de5f205fc04861",
      "inputs": [
        {
          "variable_name": "Variable3659",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3603"
    },
    {
      "shader_name": "Tensordot_RGBA_96422eaef392dafbe3b8fb4c51daf759ea2ebfebaebff782e557ab2f",
      "inputs": [
        {
          "variable_name": "Variable3603",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2633",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3582"
    },
    {
      "shader_name": "Col2Im_71ba17735b1e4b5c71a687778f022160124d313939a8cc7b3b5ec4c8",
      "inputs": [
        {
          "variable_name": "Variable3582",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3583"
    },
    {
      "shader_name": "ElementwiseMul_4ad202bee9cfab61daba287c480b2600cf7dd1a67fac29ef07023a88",
      "inputs": [
        {
          "variable_name": "ConstantVariable2608",
          "value": 0
        },
        {
          "variable_name": "Variable3583",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3572"
    },
    {
      "shader_name": "ElementwiseAdd_d9fcefe0acb7c770acc7baeff8a7143e79d7f855aa5b35b4feb08ef5",
      "inputs": [
        {
          "variable_name": "Variable3572",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2616",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3490"
    },
    {
      "shader_name": "LeakyRelu_5e4f95ba0bdb741e50ef6a60ce660804b450771b0e856c9d1e730119",
      "inputs": [
        {
          "variable_name": "Variable3490",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3661"
    },
    {
      "shader_name": "ConvertRtoRGBA_7044593d09900feb4142c3ccadd6cbc563644dca54e1cea1c1aca808",
      "inputs": [
        {
          "variable_name": "Variable3661",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3605"
    },
    {
      "shader_name": "Tensordot_RGBA_061e3011498db07313c8ec861bf47472905d07f4e022f2f56e9c137c",
      "inputs": [
        {
          "variable_name": "Variable3605",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2632",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3587"
    },
    {
      "shader_name": "Col2Im_4a493b9c5ed50e9ad73e3bae25eae8c6ef2e24e3a9ed71e9046090d4",
      "inputs": [
        {
          "variable_name": "Variable3587",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3588"
    },
    {
      "shader_name": "ElementwiseMul_4ad202bee9cfab61daba287c480b2600cf7dd1a67fac29ef07023a88",
      "inputs": [
        {
          "variable_name": "ConstantVariable2604",
          "value": 0
        },
        {
          "variable_name": "Variable3588",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3570"
    },
    {
      "shader_name": "ElementwiseAdd_d9fcefe0acb7c770acc7baeff8a7143e79d7f855aa5b35b4feb08ef5",
      "inputs": [
        {
          "variable_name": "Variable3570",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2614",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3500"
    },
    {
      "shader_name": "LeakyRelu_5e4f95ba0bdb741e50ef6a60ce660804b450771b0e856c9d1e730119",
      "inputs": [
        {
          "variable_name": "Variable3500",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3663"
    },
    {
      "shader_name": "ConvertRtoRGBA_7044593d09900feb4142c3ccadd6cbc563644dca54e1cea1c1aca808",
      "inputs": [
        {
          "variable_name": "Variable3663",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3607"
    },
    {
      "shader_name": "Tensordot_RGBA_7d845fc685a95cab6061ad83010c0af05b73cd24fc45882353266969",
      "inputs": [
        {
          "variable_name": "Variable3607",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2631",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3592"
    },
    {
      "shader_name": "Col2Im_562c7ba82c213a55c7d639679ab16a00b6edeb965b7296ba11f1c14c",
      "inputs": [
        {
          "variable_name": "Variable3592",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3593"
    },
    {
      "shader_name": "ElementwiseMul_312e8c96f4a6aa5aca7c5a96e13f567c77cda5f845fe08dae8b8613d",
      "inputs": [
        {
          "variable_name": "ConstantVariable2600",
          "value": 0
        },
        {
          "variable_name": "Variable3593",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3568"
    },
    {
      "shader_name": "ElementwiseAdd_ed15b6b75e4a388912b6da00ce6d7b52012f3486fa9672bb438be9b5",
      "inputs": [
        {
          "variable_name": "Variable3568",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2612",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3510"
    },
    {
      "shader_name": "LeakyRelu_74210680de819f7ba52438af4ad46335f469d755a7b85605b646d2a7",
      "inputs": [
        {
          "variable_name": "Variable3510",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3665"
    },
    {
      "shader_name": "ConvertRtoRGBA_7a6ce9d4ad2cea961e608735220ac421c3b99b448fdd69f0bca7d34b",
      "inputs": [
        {
          "variable_name": "Variable3665",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3609"
    },
    {
      "shader_name": "Tensordot_RGBA_8c2613f99cbd135d22e339933f068c9d267bbbc3206a2f4a24d7d3d9",
      "inputs": [
        {
          "variable_name": "Variable3609",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2630",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3597"
    },
    {
      "shader_name": "Col2Im_dd94e970f941d0c3d69dd1dab7db9296ca9c2512eaa0f6e50c5b45fd",
      "inputs": [
        {
          "variable_name": "Variable3597",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3598"
    },
    {
      "shader_name": "ElementwiseMul_312e8c96f4a6aa5aca7c5a96e13f567c77cda5f845fe08dae8b8613d",
      "inputs": [
        {
          "variable_name": "ConstantVariable2596",
          "value": 0
        },
        {
          "variable_name": "Variable3598",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3566"
    },
    {
      "shader_name": "ElementwiseAdd_ed15b6b75e4a388912b6da00ce6d7b52012f3486fa9672bb438be9b5",
      "inputs": [
        {
          "variable_name": "Variable3566",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2610",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3520"
    },
    {
      "shader_name": "LeakyRelu_74210680de819f7ba52438af4ad46335f469d755a7b85605b646d2a7",
      "inputs": [
        {
          "variable_name": "Variable3520",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3667"
    },
    {
      "shader_name": "ConvertRtoRGBA_7a6ce9d4ad2cea961e608735220ac421c3b99b448fdd69f0bca7d34b",
      "inputs": [
        {
          "variable_name": "Variable3667",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3611"
    },
    {
      "shader_name": "Tensordot_RGBA_520433d80b6bb99133d20bf77361bf8c42654ba5ccd574bda65941a6",
      "inputs": [
        {
          "variable_name": "Variable3611",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2629",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3578"
    },
    {
      "shader_name": "ElementwiseAdd_653436feffb44c22215d2e03614842e3cefeb6ee9e7f3ce63ec7e772",
      "inputs": [
        {
          "variable_name": "ConstantVariable2514",
          "value": 0
        },
        {
          "variable_name": "Variable3578",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable3523"
    },
    {
      "shader_name": "Tanh_2f842fb76de8adaedbb5d962ca4b85437bbc997aadcf9da4beb45a27",
      "inputs": [
        {
          "variable_name": "Variable3523",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3524"
    }
  ],
  "constants_map": {
    "ConstantVariable2541": {
      "byte_offset": 0,
      "size": 10000
    },
    "ConstantVariable2537": {
      "byte_offset": 40000,
      "size": 100
    },
    "ConstantVariable2513": {
      "byte_offset": 40400,
      "size": 153900
    },
    "ConstantVariable2519": {
      "byte_offset": 656000,
      "size": 100
    },
    "ConstantVariable2539": {
      "byte_offset": 656400,
      "size": 20000
    },
    "ConstantVariable2521": {
      "byte_offset": 736400,
      "size": 100
    },
    "ConstantVariable2660": {
      "byte_offset": 736800,
      "size": 409600
    },
    "ConstantVariable2659": {
      "byte_offset": 2375200,
      "size": 409600
    },
    "ConstantVariable2658": {
      "byte_offset": 4013600,
      "size": 409600
    },
    "ConstantVariable2657": {
      "byte_offset": 5652000,
      "size": 409600
    },
    "ConstantVariable2656": {
      "byte_offset": 7290400,
      "size": 409600
    },
    "ConstantVariable2655": {
      "byte_offset": 8928800,
      "size": 409600
    },
    "ConstantVariable2654": {
      "byte_offset": 10567200,
      "size": 409600
    },
    "ConstantVariable2653": {
      "byte_offset": 12205600,
      "size": 409600
    },
    "ConstantVariable2652": {
      "byte_offset": 13844000,
      "size": 409600
    },
    "ConstantVariable2649": {
      "byte_offset": 15482400,
      "size": 409600
    },
    "ConstantVariable2648": {
      "byte_offset": 17120800,
      "size": 409600
    },
    "ConstantVariable2651": {
      "byte_offset": 18759200,
      "size": 409600
    },
    "ConstantVariable2650": {
      "byte_offset": 20397600,
      "size": 409600
    },
    "ConstantVariable2647": {
      "byte_offset": 22036000,
      "size": 409600
    },
    "ConstantVariable2646": {
      "byte_offset": 23674400,
      "size": 409600
    },
    "ConstantVariable2661": {
      "byte_offset": 25312800,
      "size": 409600
    },
    "ConstantVariable2510": {
      "byte_offset": 26951200,
      "size": 65536
    },
    "ConstantVariable2633": {
      "byte_offset": 27213344,
      "size": 524288
    },
    "ConstantVariable2608": {
      "byte_offset": 29310496,
      "size": 128
    },
    "ConstantVariable2616": {
      "byte_offset": 29311008,
      "size": 128
    },
    "ConstantVariable2632": {
      "byte_offset": 29311520,
      "size": 147456
    },
    "ConstantVariable2604": {
      "byte_offset": 29901344,
      "size": 128
    },
    "ConstantVariable2614": {
      "byte_offset": 29901856,
      "size": 128
    },
    "ConstantVariable2631": {
      "byte_offset": 29902368,
      "size": 131072
    },
    "ConstantVariable2600": {
      "byte_offset": 30426656,
      "size": 64
    },
    "ConstantVariable2612": {
      "byte_offset": 30426912,
      "size": 64
    },
    "ConstantVariable2630": {
      "byte_offset": 30427168,
      "size": 36864
    },
    "ConstantVariable2596": {
      "byte_offset": 30574624,
      "size": 64
    },
    "ConstantVariable2610": {
      "byte_offset": 30574880,
      "size": 64
    },
    "ConstantVariable2629": {
      "byte_offset": 30575136,
      "size": 192
    },
    "ConstantVariable2514": {
      "byte_offset": 30575904,
      "size": 3
    }
  },
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}